// DO NOT EDIT. This file is generated by Fresh.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import * as $_404 from "./routes/_404.tsx";
import * as $_app from "./routes/_app.tsx";
import * as $_middleware from "./routes/_middleware.ts";
import * as $admin_events from "./routes/admin/events.tsx";
import * as $admin_hosts from "./routes/admin/hosts.tsx";
import * as $admin_security from "./routes/admin/security.tsx";
import * as $api_events from "./routes/api/events.ts";
import * as $api_events_id_delete from "./routes/api/events/[id]/delete.ts";
import * as $api_events_id_details from "./routes/api/events/[id]/details.ts";
import * as $api_events_id_potluck from "./routes/api/events/[id]/potluck.ts";
import * as $api_events_id_potluck_itemId_ from "./routes/api/events/[id]/potluck/[itemId].ts";
import * as $api_events_id_rsvp from "./routes/api/events/[id]/rsvp.ts";
import * as $api_geocode from "./routes/api/geocode.ts";
import * as $api_hosts from "./routes/api/hosts.ts";
import * as $api_hosts_id_events from "./routes/api/hosts/[id]/events.ts";
import * as $api_hosts_status from "./routes/api/hosts/status.ts";
import * as $api_hosts_validate from "./routes/api/hosts/validate.ts";
import * as $api_users_id_rsvps from "./routes/api/users/[id]/rsvps.ts";
import * as $auth_apple from "./routes/auth/apple.ts";
import * as $auth_callback_apple from "./routes/auth/callback/apple.ts";
import * as $auth_callback_google from "./routes/auth/callback/google.ts";
import * as $auth_google from "./routes/auth/google.ts";
import * as $auth_login from "./routes/auth/login.tsx";
import * as $auth_logout from "./routes/auth/logout.ts";
import * as $calendar from "./routes/calendar.tsx";
import * as $dev_mock_login from "./routes/dev/mock-login.tsx";
import * as $events_id_ from "./routes/events/[id].tsx";
import * as $events_id_edit from "./routes/events/[id]/edit.tsx";
import * as $events_index from "./routes/events/index.tsx";
import * as $host from "./routes/host.tsx";
import * as $host_attendees_id_ from "./routes/host/attendees/[id].tsx";
import * as $host_dashboard from "./routes/host/dashboard.tsx";
import * as $index from "./routes/index.tsx";
import * as $profile from "./routes/profile.tsx";
import * as $AddressValidator from "./islands/AddressValidator.tsx";
import * as $AttendeeActions from "./islands/AttendeeActions.tsx";
import * as $CachedPotluckManager from "./islands/CachedPotluckManager.tsx";
import * as $CachedRSVPButton from "./islands/CachedRSVPButton.tsx";
import * as $Counter from "./islands/Counter.tsx";
import * as $DeleteEventButton from "./islands/DeleteEventButton.tsx";
import * as $HostFormValidator from "./islands/HostFormValidator.tsx";
import * as $ParticipantsList from "./islands/ParticipantsList.tsx";
import type { Manifest } from "$fresh/server.ts";

const manifest = {
  routes: {
    "./routes/_404.tsx": $_404,
    "./routes/_app.tsx": $_app,
    "./routes/_middleware.ts": $_middleware,
    "./routes/admin/events.tsx": $admin_events,
    "./routes/admin/hosts.tsx": $admin_hosts,
    "./routes/admin/security.tsx": $admin_security,
    "./routes/api/events.ts": $api_events,
    "./routes/api/events/[id]/delete.ts": $api_events_id_delete,
    "./routes/api/events/[id]/details.ts": $api_events_id_details,
    "./routes/api/events/[id]/potluck.ts": $api_events_id_potluck,
    "./routes/api/events/[id]/potluck/[itemId].ts":
      $api_events_id_potluck_itemId_,
    "./routes/api/events/[id]/rsvp.ts": $api_events_id_rsvp,
    "./routes/api/geocode.ts": $api_geocode,
    "./routes/api/hosts.ts": $api_hosts,
    "./routes/api/hosts/[id]/events.ts": $api_hosts_id_events,
    "./routes/api/hosts/status.ts": $api_hosts_status,
    "./routes/api/hosts/validate.ts": $api_hosts_validate,
    "./routes/api/users/[id]/rsvps.ts": $api_users_id_rsvps,
    "./routes/auth/apple.ts": $auth_apple,
    "./routes/auth/callback/apple.ts": $auth_callback_apple,
    "./routes/auth/callback/google.ts": $auth_callback_google,
    "./routes/auth/google.ts": $auth_google,
    "./routes/auth/login.tsx": $auth_login,
    "./routes/auth/logout.ts": $auth_logout,
    "./routes/calendar.tsx": $calendar,
    "./routes/dev/mock-login.tsx": $dev_mock_login,
    "./routes/events/[id].tsx": $events_id_,
    "./routes/events/[id]/edit.tsx": $events_id_edit,
    "./routes/events/index.tsx": $events_index,
    "./routes/host.tsx": $host,
    "./routes/host/attendees/[id].tsx": $host_attendees_id_,
    "./routes/host/dashboard.tsx": $host_dashboard,
    "./routes/index.tsx": $index,
    "./routes/profile.tsx": $profile,
  },
  islands: {
    "./islands/AddressValidator.tsx": $AddressValidator,
    "./islands/AttendeeActions.tsx": $AttendeeActions,
    "./islands/CachedPotluckManager.tsx": $CachedPotluckManager,
    "./islands/CachedRSVPButton.tsx": $CachedRSVPButton,
    "./islands/Counter.tsx": $Counter,
    "./islands/DeleteEventButton.tsx": $DeleteEventButton,
    "./islands/HostFormValidator.tsx": $HostFormValidator,
    "./islands/ParticipantsList.tsx": $ParticipantsList,
  },
  baseUrl: import.meta.url,
} satisfies Manifest;

export default manifest;
